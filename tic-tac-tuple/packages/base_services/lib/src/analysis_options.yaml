# This file configures lint analyzers, which statically analyze
# Dart code to check for errors, warnings, and lints.
#
# The issues identified by the analyzers are surfaced in the UI of Dart-enabled
# IDEs (https://dart.dev/tools#ides-and-editors). Analyzers can also be
# invoked from the command line by running `flutter analyze`.

# Flutter Lints
# https://pub.dev/packages/flutter_lints
#
# Flutter Lints have been disabled to allow Very Good Analysis to take precedence.
#
# include: package:flutter_lints/flutter.yaml

# Very Good Analysis (VGV)
# https://pub.dev/packages/very_good_analysis
#
# Very Good Analysis tracks development of new Dart and
# Flutter lint rules well and is updated regularly.
#
# The following line activates a set of recommended lints for Flutter apps,
# packages, and plugins designed to encourage good coding practices.
include: package:very_good_analysis/analysis_options.yaml

analyzer:
  # strong-mode:
    # implicit-casts: true
    # strict-casts: true
    # implicit-dynamic: true
    # strict-raw-types: true
  exclude:
    - "**/*.g.dart"
    - "assets/**"

linter:
  # The lint rules applied to this project can be customized in the
  # section below to disable rules from the `package:flutter_lints/flutter.yaml`
  # included above or to enable additional rules. A list of all available lints
  # and their documentation is published at https://dart.dev/lints.
  #
  # Instead of disabling a lint rule for the entire project in the
  # section below, it can also be suppressed for a single line of code
  # or a specific dart file by using the `// ignore: name_of_lint` and
  # `// ignore_for_file: name_of_lint` syntax on the line or in the file
  # producing the lint.
  rules:
    # avoid_print: false  # Uncomment to disable the `avoid_print` rule
    # prefer_single_quotes: true  # Uncomment to enable the `prefer_single_quotes` rule
    lines_longer_than_80_chars: false
    public_member_api_docs: false

# The analysis rules below are for anyone using DCM.
#
# dart_code_metrics:
#   extends:
#     - recommended
#   rules:
#     - avoid-shadowing: false
#     - prefer-match-file-name: false
#     - prefer-single-widget-per-file: false
#     - no-empty-block: false
#     - unnecessary-trailing-comma: false

# Additional information about this file can be found at
# https://dart.dev/guides/language/analysis-options

### For those using DCM:
###
### Uncomment all the lines below,
###   then uncomment or comment the individual rules.
###
### The commented rules below are those applied to this app as of: 2024-08-03

# dart_code_metrics:
#   rules-exclude:
#     - assets/**
#   extends:
#     - recommended
#   rules:
#     # - avoid-accessing-collections-by-constant-index: false
#     # - avoid-duplicate-initializers: false
#     - avoid-dynamic: false
#     # - avoid-empty-setstate: false
#     # - avoid-incomplete-copy-with: false
#     # - avoid-inferrable-type-arguments: false
#     # - avoid-missed-calls: false
#     # - avoid-missing-enum-constant-in-map: false
#     # - avoid-missing-image-alt: false
#     # - avoid-nullable-interpolation: false
#     # - avoid-nullable-tostring: false
#     # - avoid-passing-async-when-sync-expected: false
#     # - avoid-passing-self-as-argument: false
#     # - avoid-redundant-async: false
#     # - avoid-redundant-else: false
#     - avoid-shadowing:
#         ignored-names:
#           - context
#     # - avoid-unassigned-late-fields: false
#     # - avoid-undisposed-instances: false
#     # - avoid-unnecessary-futures: false
#     # - avoid-unnecessary-local-late: false
#     # - avoid-unnecessary-nullable-return-type: false
#     # - avoid-unnecessary-reassignment: false
#     # - avoid-unnecessary-setstate: false
#     # - avoid-unnecessary-stateful-widgets: false
#     # - avoid-unused-parameters: false
#     # - dispose-fields: false
#     - match-getter-setter-field-names: false

#     # Some of these are needed (for now) for context-after-await calls.
#     # - move-variable-closer-to-its-usage: false

#     # - no-equal-then-else: false
#     # - prefer-correct-callback-field-name: false
#     # - prefer-correct-json-casts: false
#     # - prefer-declaring-const-constructor: false
#     # - prefer-match-file-name: false
#     # - prefer-prefixed-global-constants: false
#     # - prefer-single-widget-per-file: false
#     # - prefer-switch-with-enums: false
#     # - prefer-trailing-comma: false
#     # - proper-super-calls: false
#     # - use-setstate-synchronously: false
#     #
#     - unnecessary-trailing-comma: false
#     - avoid-unused-instances: false
#     - no-empty-block: false
